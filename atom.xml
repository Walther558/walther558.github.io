<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://walther558.github.io</id>
    <title>558&apos;s blog</title>
    <updated>2020-11-25T07:54:32.313Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://walther558.github.io"/>
    <link rel="self" href="https://walther558.github.io/atom.xml"/>
    <subtitle>Welcome</subtitle>
    <logo>https://walther558.github.io/images/avatar.png</logo>
    <icon>https://walther558.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 558&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[简单的函数调用与二维数组应用]]></title>
        <id>https://walther558.github.io/post/jian-dan-de-han-shu-diao-yong-yu-er-wei-shu-zu-ying-yong/</id>
        <link href="https://walther558.github.io/post/jian-dan-de-han-shu-diao-yong-yu-er-wei-shu-zu-ying-yong/">
        </link>
        <updated>2020-11-25T07:46:50.000Z</updated>
        <content type="html"><![CDATA[<p><strong>编写一个程序，使用一个二维数组来存储一年中每月的最高和最低温度。程序应该输出该年的平均最高温度、平均最低温度以及该年的最高温度和最低温度。程序必须包含下面的函数：<br>
A．	函数getData（）：该函数将数据读入并存储到二维数组中。<br>
B．	函数averageHigh():该函数计算并返回该年的平均高温。<br>
C．	函数averageLow（）：该函数计算并返回该年的平均低温。<br>
D．	函数indexHighTemp（）：该函数返回数组中最高温度的下标。<br>
E．	函数indexLowTemp（）：该函数返回数组中最低温度的下标。</strong></p>
<p>代码正文：<br>
int main()<br>
{<br>
float temper[2][12];<br>
void getData(float temper[2][12]);<br>
float averageHigh(float temper[2][12]);<br>
float averageLow(float temper[2][12]);<br>
float indexHighTemp(float temper[2][12]);<br>
float indexLowTemp(float temper[2][12]);<br>
cout &lt;&lt; &quot;第一行输入每个月的最高气温，第二行输入每个月的最低气温&quot; &lt;&lt; endl ;<br>
getData(temper);<br>
cout &lt;&lt; &quot;每个月的最高气温平均值为&quot; &lt;&lt; averageHigh(temper) &lt;&lt; endl;<br>
cout &lt;&lt; &quot;每个月的最低气温平均值为&quot; &lt;&lt; averageLow(temper) &lt;&lt; endl;<br>
cout &lt;&lt; &quot;最高温度的下标为&quot; &lt;&lt; indexHighTemp(temper) &lt;&lt; endl;<br>
cout &lt;&lt; &quot;最低温度的下标为&quot; &lt;&lt; indexLowTemp(temper) &lt;&lt; endl;<br>
return 0;</p>
<p>}</p>
<p>void getData(float temper[2][12])<br>
{<br>
for (int i = 0; i &lt; 2; i++)<br>
{<br>
for (int k = 0; k &lt; 12; k++)<br>
cin &gt;&gt; temper[i][k];<br>
}<br>
}</p>
<p>float averageHigh(float temper[2][12])<br>
{<br>
float sum = 0;<br>
for (int i = 0; i &lt; 12; i++)<br>
sum += temper[0][i];<br>
float avg = sum / 12;<br>
return avg;<br>
}</p>
<p>float averageLow(float temper[2][12])<br>
{<br>
float sum = 0;<br>
for (int i = 0; i &lt; 12; i++)<br>
sum += temper[1][i];<br>
float avg = sum / 12;<br>
return avg;<br>
}</p>
<p>float indexHighTemp(float temper[2][12])<br>
{<br>
float max = 1.0;<br>
int s;<br>
for (int i = 0; i &lt; 12; i++)<br>
{<br>
if (max &lt; temper[0][i])<br>
{<br>
max = temper[0][i];<br>
s = i;<br>
}<br>
}<br>
return s;<br>
}</p>
<p>float indexLowTemp(float temper[2][12])<br>
{<br>
float min = 100;<br>
int s;<br>
for (int i = 0; i &lt; 12; i++)<br>
{<br>
if (min &gt; temper[1][i])<br>
{<br>
min = temper[1][i];<br>
s = i;<br>
}<br>
}<br>
return s;<br>
}</p>
]]></content>
    </entry>
</feed>